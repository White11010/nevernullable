{
  "name": "nevernullable",
  "version": "1.0.4",
  "description": "Option<T>, Some<T>, None types and runtime functions to safely write JS/TS code without using null and undefined",
  "main": "dist",
  "types": "dist",
  "exports": {
    ".": "./dist/index.js"
  },
  "files": [
    "dist/**/*"
  ],
  "scripts": {
    "test": "jest",
    "build": "tsc"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.14.1",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.5.2"
  },
  "keywords": [
    "option",
    "functional",
    "fp",
    "null",
    "nullable",
    "safe"
  ],
  "author": "Vladislav 'White11010' Beliavski",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/White11010/nevernullable.git"
  },
  "homepage": "https://github.com/White11010/nevernullable"
}
